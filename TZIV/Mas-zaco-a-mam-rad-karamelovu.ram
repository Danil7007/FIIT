// nacitaj N a uloz do R1
read 1

// test ci N <= 10000
load =10001 // do akumulatora
sub 1 // odpocita sa register 1
JGTZ zaciatokHladania// ak bolo vstup. cislo do 10 000 tak v acc je hodnota vacsia ako 0 -> skoc na zaciatokHladania

// neakceptovany vstup ak bolo N>10000
reject // ak sa podmienka nevykona cislo bolo napicu a skoci to sem
halt

// navestie loop kym N nebude 0 aby sme nasli N cisel
zaciatokHladania:
// bude sa tu odcitavat od vstupneho cisla ak sa najde cislo s cif suctom del. 3

// do R2 vytvor "temp" zacinajuci na 11
// postupne sa testuju cisla od 12 do nekonecno, lebo prve cislo co ma cif sucet delitelny 3 a mensie nema zmysel skusat
load =12 // ak je zadanie chybne treba sem dat 3 .. ak ma byt podla zadania tak tu ide 12ka
store 2 // v reg 2 budu cisla ktore sa budu testovat, a to sa bude inkrementovat (vzdy o 1)

// ta ista hodnota co je v reg 2, lebo s tou hodnotou sa bude kalkulovat a potom sa hodnota zmeni -> zduplikovana aby sa vedelo s cim sa pocita
// v 2 sa pocas vypoctu meni, v 20 sa nemeni
// R20 je zaloha pre temp, akoby count aby sa skusalo postupne dalsie cislo
store 20 

// teraz potrebujeme ciferny sucet pre temp
loopCifSum:

	// akoby mod 10
	load 2 // load temo
	div =10
	mul =10
	store 3 // a/10*10 uloz do R3
	load 2 // load temp
	sub 3 // R3 -= temp

	// sumovanie cifSuctu do R4
	add 4 // R4 += temp
	store 4 // uloz R4

	load 3 // naciataj R3
	div =10 // videl 10
	store 2 // uloz do R2
	JGTZ loopCifSum

	// otestovat ci je cifSucet del. 3
	load 4
	div =3
	mul =3
	store 40
	load 4
	sub 40
	JZERO vypis // ak R4 %3 je nula tak vypis
	JUMP nextTemp // ak to nieje del. 3 jump dalej

	vypis:
	write 20
	load 1 // nacitaj N
	sub =1 // N--
	store 1
	JZERO koniec // ak je N nula koncime

nextTemp:
// count++ a set do R2
load 20
add =1
store 20
store 2

// znulovanie R4 aby sa mohol sumovat dalsi cifSucet
load =0
store 4

// jump pre skusanie cifSuctu pre dalsi count
JUMP loopCifSum 


koniec:
halt